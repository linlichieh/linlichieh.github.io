<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on Software engineering notes</title>
    <link>/categories/aws/</link>
    <description>Recent content in aws on Software engineering notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/categories/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS</title>
      <link>/posts/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/aws/</guid>
      <description>(最後更新: 2016-04-27)
介紹 AWS (Amazon Web Services) 是針對主機或 App 提供整套 solution 的雲端服務
Install/Upgrade AWS CLI 安裝
sudo pip install --upgrade awscli 如果安裝出問題, 強制重新安裝可以解決
sudo pip install awscli --force-reinstall --upgrade Ubuntu (建議不要使用 apt-get 安裝, 版本很舊) 有些安裝完會有設定檔 /var/awslogs/etc/awslogs.conf Stop the agent
sudo service awslogs stop // Works on Ubuntu sudo service awslogsd stop // Amazon Linux 2 stop|restart|start
Region &amp;amp; AZ region 是 Data Center 的集合 AZ 與 AZ 至少隔70公里以上 AZ 與 AZ 是用光纖連接 AZ 裡有很多 DC 每個 DC 是 25Tbps 同一 region 我的帳號的 eu-west-1a 跟你的帳號的 eu-west-1a 不一定是同一個 AZ, 避免太多人選擇同一 AZ IAM 如果有很多開發者要共用一個 AWS 帳號, 這算是必用的服務 可以針對不同開發者給與不同權限 一般來說程式透過 Access key &amp;amp; Secret Key 調用 AWS API 是要寫在程式裡的, 但會遇到 Credentials embedded in code問題, 如果 push 到 public 的 github 就有資安風險, 也可以改成在 ec2 裡(環境)設定 secret key 較安全 (aws command) 角色可分 3 種 : user : 可以讓多個開發者共用同一個 AWS, 每個人可以有不同的登入帳密及權限 group : 可以設定權限, 再把要執行這些權限的 user 圈到這個 group 裡 role : 這是給 ec2 執行的權限, 開 ec2 時 IAM role 選這個, 而此 ec2 就有權限執行開放的服務 [操作] 增加一個登入帳號給團隊的成員 Users -&amp;gt; Create Users -&amp;gt; 輸入 user name -&amp;gt; copy Access Key ID 及 Secret Access Key (目前還不會用到) -&amp;gt; 回到 Users 列表就會看到剛剛新加的 user</description>
    </item>
    
    <item>
      <title>Go AWS</title>
      <link>/posts/go-aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/go-aws/</guid>
      <description>如何使用 AWS API 在使用它的任何一個 service 前要先準備好 credential 然候再建立 session，然候再跟 AWS services 互動，
Session 可以讓全部 AWS services 共用 (在使用各服務前會需要用 session 建立) ，最好 cache 起來，
每次要用之前再從 cache 拿出來， 避免每一次重新建立連線耗費資源。
[1] 初始化 credential 可以使用 aws-cli 指令 aws configure 幫你產生或手動建立檔案
~/.aws/config
[這裡填 profile name] region = us-west-2 output = json ~/.aws/credentials
[這裡填 profile name] aws_access_key_id = A******************A aws_secret_access_key = 9**************************************V 常用的 credential 有幾種，以下會按照順序，哪個可以取到就使用
func GetAWSCredentialChain() (*credentials.Credentials, *aws.Config) { config := aws.NewConfig() var ProviderList []credentials.Provider = []credentials.</description>
    </item>
    
    <item>
      <title>PHP Codeigniter S3</title>
      <link>/posts/aws-s3-php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/aws-s3-php/</guid>
      <description>(最後更新: 2016-04-27)
介紹 以下會介紹上傳到 s3 的 2 種方法 :
mobile 上傳到 s3 server 上傳到 s3 command 上傳到 s3, 請參考此篇 AWS-CLI command 上傳到 s3
安裝 AWS SDK 首先先用 composer 安裝 aws-sdk, composer.json :
{ &amp;quot;require&amp;quot;: { &amp;quot;aws/aws-sdk-php&amp;quot;: &amp;quot;2.7.0&amp;quot; } } 執行
$ composer install Codeigniter (application/config/config.php) 打開 : $config[&#39;composer_autoload&#39;] = TRUE;
mobile 上傳到 s3 有兩種方法
直接給手機一個 S3 的 IAM User 讓手機以 SDK 上傳圖片 S3 server 產生有 expire time 的 pre-signed URL (由 server 取得授權的 url) 給 mobile 上傳圖片 直接給手機一個 S3 的 IAM User 讓手機以 SDK 上傳圖片 原本的 Resource 的值是 *, 將它改成以下</description>
    </item>
    
  </channel>
</rss>
