<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on Software</title>
    <link>/categories/algorithms/</link>
    <description>Recent content in algorithms on Software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 May 2017 18:56:16 +0800</lastBuildDate><atom:link href="/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Algorithms</title>
      <link>/posts/algorithms/</link>
      <pubDate>Sat, 20 May 2017 18:56:16 +0800</pubDate>
      
      <guid>/posts/algorithms/</guid>
      <description>search Depth First Search (DFS) on a Binary tree 與 BFS 一樣是用來看這個點有沒有辦法到另一個點或是否某個點有存在在 graph 裡 (如果所有點都有連接)
root node &amp;gt; 左節點; root node &amp;lt; 右節點 原理是先往左再往右找, 從深找到淺 深到沒有子 node 再&amp;quot;回頭&amp;quot;換右邊 如果最後回到 root node (最上層) 就代表要找的 node 沒有存在 binary search 必須是已經排序過的陣列 每一次取中間位置的值, 比對大小再向左向右找 最佳時間複雜度：O(1) 平均時間複雜度：O(log n) 最差時間複雜度：O(log n) 空間複雜度：O(1) Sorting algorithm Comparison
Bubble Sort Time O(n^2) Space O(1) Insertion Sort Time O(n^2) Space O(1) Selection Sort Time O(n^2) Space O(1) Merge Sort Time O(n log(n)) Space O(n) Quick Sort Time O(n^2) Space O(log(n)) Can sort an type of data</description>
    </item>
    
  </channel>
</rss>
